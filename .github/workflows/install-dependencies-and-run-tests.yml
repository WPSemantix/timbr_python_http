name: Test Python package new version
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Update pip version
      run: |
        python -m pip install --upgrade pip
    - name: Install dependencies
      run: |
        pip install -r test/requirements.txt
    - name: Build new version of the package
      run: |
        python -m build
    - name: Install the new version of the package
      run: |
        pip install dist/*.tar.gz
    - name: Test with pytest
      env:
          URL: ${{ secrets.URL }}
          ONTOLOGY: ${{ secrets.ONTOLOGY }}
          TOKEN: ${{ secrets.TOKEN }}
          QUERY: ${{ secrets.QUERY }}
          DATASOURCE: ${{ secrets.DATASOURCE }}
          HOSTNAME: ${{ secrets.HOSTNAME }}
          PORT: ${{ secrets.PORT }}
          ENABLED_SSL: ${{ secrets.ENABLED_SSL }}
          VERIFY_SSL: ${{ secrets.VERIFY_SSL }}
          NESTED: ${{ secrets.NESTED }}
          ENABLE_IPV6: ${{ secrets.ENABLE_IPV6 }}
          JWT_TIMBR_URL: ${{ secrets.JWT_TIMBR_URL }}
          JWT_TIMBR_ONTOLOGY: ${{ secrets.JWT_TIMBR_ONTOLOGY }}
          JWT_TENANT_ID: ${{ secrets.JWT_TENANT_ID }}
          JWT_CLIENT_ID: ${{ secrets.JWT_CLIENT_ID }}
          JWT_USERNAME: ${{ secrets.JWT_USERNAME }}
          JWT_PASSWORD: ${{ secrets.JWT_PASSWORD }}
          JWT_SCOPE: ${{ secrets.JWT_SCOPE }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
      run: |
        pytest
